<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>splitOccurrenceCheckboxesAction</name>
        <label>Split Occurrence IDs</label>
        <locationX>402</locationX>
        <locationY>518</locationY>
        <actionName>Illest__StringFlow</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>selectedOccurrenceIdLoop</targetReference>
        </connector>
        <inputParameters>
            <name>inputList</name>
            <value>
                <elementReference>occurrenceCheckboxGroup</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>selectedOccurrenceIdList</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>50.0</apiVersion>
    <choices>
        <name>occurrenceScopeChoice</name>
        <choiceText>Occurrence</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Occurrence</stringValue>
        </value>
    </choices>
    <choices>
        <name>opportunityScopeChoice</name>
        <choiceText>Opportunity</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Opportunity</stringValue>
        </value>
    </choices>
    <decisions>
        <description>Determine the scope of need, whether we need a VL for the whole opportunity or whether we need a VL for a specific set of occurrences.</description>
        <name>scopeDecision</name>
        <label>Scope Decision</label>
        <locationX>358</locationX>
        <locationY>278</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>opportunityScopeOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>needScope</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Opportunity</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>createOpportunityNeed</targetReference>
            </connector>
            <label>Opportunity</label>
        </rules>
        <rules>
            <name>occurrenceScopeOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>needScope</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Occurrence</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>occurrenceSelectionScreen</targetReference>
            </connector>
            <label>Occurrence</label>
        </rules>
    </decisions>
    <description>Create new VL Need records for unclaimed occurrences of a volunteer opportunity. Use &quot;Split Multiple Values&quot; Apex action to simplify parsing the checkbox group from the selection screen.</description>
    <dynamicChoiceSets>
        <name>activeOccurrenceChoiceSet</name>
        <dataType>String</dataType>
        <displayField>HOC__Start_Date_Time__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>HOC__Volunteer_Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>HOC__Start_Date_Time__c</field>
            <operator>GreaterThan</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </filters>
        <filters>
            <field>HOC__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <object>HOC__Occurrence__c</object>
        <sortField>HOC__Start_Date_Time__c</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <formulas>
        <name>firstSelectedOccurrenceId</name>
        <dataType>String</dataType>
        <expression>LEFT({!selectedOccurrenceIdText}, FIND(&quot;;&quot;, {!selectedOccurrenceIdText}) - 1)</expression>
    </formulas>
    <formulas>
        <name>isLastOccurrenceId</name>
        <dataType>Boolean</dataType>
        <expression>IF(CONTAINS({!selectedOccurrenceIdText},&quot;;&quot;),FALSE,TRUE)</expression>
    </formulas>
    <formulas>
        <name>remainingSelectedOccurrenceIdText</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!selectedOccurrenceIdText},{!firstSelectedOccurrenceId}&amp;&quot;; &quot;,&quot;&quot;)</expression>
    </formulas>
    <interviewLabel>New VL Needs {!$Flow.CurrentDateTime}</interviewLabel>
    <label>New VL Needs</label>
    <loops>
        <name>selectedOccurrenceIdLoop</name>
        <label>Selected Occurrence ID</label>
        <locationX>402</locationX>
        <locationY>638</locationY>
        <collectionReference>selectedOccurrenceIdList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>createOccurrenceNeed</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>createOccurrenceNeed</name>
        <label>Create Occurrence Need</label>
        <locationX>490</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>occurrenceNeedConfirmation</targetReference>
        </connector>
        <inputAssignments>
            <field>Occurrence__c</field>
            <value>
                <elementReference>selectedOccurrenceIdLoop</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VolunteerOpportunity__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>OrphanedProject__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>createOpportunityNeed</name>
        <label>Create Opportunity Need</label>
        <locationX>50</locationX>
        <locationY>398</locationY>
        <connector>
            <targetReference>opportunityNeedConfirmation</targetReference>
        </connector>
        <inputAssignments>
            <field>VolunteerOpportunity__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>OrphanedProject__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <screens>
        <name>occurrenceNeedConfirmation</name>
        <label>Occurrence Need(s) Created</label>
        <locationX>490</locationX>
        <locationY>878</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>selectedOccurrenceIdLoop</targetReference>
        </connector>
        <fields>
            <name>occurrenceNeedConfirmationDisplay</name>
            <fieldText>&lt;p&gt;Your occurrence need(s) has been created successfully!&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>occurrenceSelectionScreen</name>
        <label>Occurrence Selection</label>
        <locationX>402</locationX>
        <locationY>398</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>splitOccurrenceCheckboxesAction</targetReference>
        </connector>
        <fields>
            <name>occurrenceCheckboxGroup</name>
            <choiceReferences>activeOccurrenceChoiceSet</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Occurrences</fieldText>
            <fieldType>MultiSelectCheckboxes</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>opportunityNeedConfirmation</name>
        <label>Opportunity Need Created</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>opportunityNeedConfirmationDisplay</name>
            <fieldText>&lt;p&gt;Your opportunity need has been created successfully!&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>overviewScreen</name>
        <label>Overview</label>
        <locationX>358</locationX>
        <locationY>158</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>scopeDecision</targetReference>
        </connector>
        <fields>
            <name>description</name>
            <fieldText>&lt;p&gt;Continue to to create VL needs for all unstaffed occurrences of this opportunity!&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>needScope</name>
            <choiceReferences>opportunityScopeChoice</choiceReferences>
            <choiceReferences>occurrenceScopeChoice</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>opportunityScopeChoice</defaultSelectedChoiceReference>
            <fieldText>Do you need a VL for the whole opportunity or just a subset of occurrences?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>232</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>overviewScreen</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>newOccurrenceList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>HOC__Occurrence__c</objectType>
    </variables>
    <variables>
        <description>The Volunteer Opportunity ID of the opportunity for which VL needs should be created.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>selectedOccurrenceIdList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>selectedOccurrenceIdText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
